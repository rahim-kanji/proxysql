--- sqlite-amalgamation-3400100/sqlite3.c	2022-12-28 14:26:39.000000000 +0000
+++ sqlite-amalgamation.patch/sqlite3.c	2023-01-10 16:48:54.793689411 +0000
@@ -24454,6 +24454,44 @@
 }
 
 /*
+**    from_unixtime( TIMESTRING)
+**
+** Return YYYY-MM-DD HH:MM:SS
+*/
+static void from_unixtimeFunc(
+  sqlite3_context *context,
+  int argc,
+  sqlite3_value **argv
+){
+  DateTime p;
+  int i, n;
+  const unsigned char *z;
+  int eType;
+  memset(&p, 0, sizeof(p));
+  if( argc==0 ){
+    setDateTimeToCurrent(context, &p);
+    return;
+  }
+  if( (eType = sqlite3_value_type(argv[0]))==SQLITE_FLOAT
+                   || eType==SQLITE_INTEGER ){
+    setRawDateNumber(&p, sqlite3_value_double(argv[0]));
+  }else{
+    z = sqlite3_value_text(argv[0]);
+    if( !z || parseDateOrTime(context, (char*)z, &p) ){
+      return;
+    }
+  }
+  if( z==0 || parseModifier(context, (char*)"unixepoch", 9, &p, 0) ) return;
+  computeJD(&p);
+  if( p.isError || !validJulianDay(p.iJD) ) return;
+    char zBuf[100];
+    computeYMD_HMS(&p);
+    sqlite3_snprintf(sizeof(zBuf), zBuf, "%04d-%02d-%02d %02d:%02d:%02d",
+                     p.Y, p.M, p.D, p.h, p.m, (int)(p.s));
+    sqlite3_result_text(context, zBuf, -1, SQLITE_TRANSIENT);
+}
+
+/*
 **    time( TIMESTRING, MOD, MOD, ...)
 **
 ** Return HH:MM:SS
@@ -24742,6 +24780,7 @@
     PURE_DATE(time,             -1, 0, 0, timeFunc      ),
     PURE_DATE(datetime,         -1, 0, 0, datetimeFunc  ),
     PURE_DATE(strftime,         -1, 0, 0, strftimeFunc  ),
+    DFUNCTION(from_unixtime,    -1, 0, 0, from_unixtimeFunc  ),
     DFUNCTION(current_time,      0, 0, 0, ctimeFunc     ),
     DFUNCTION(current_timestamp, 0, 0, 0, ctimestampFunc),
     DFUNCTION(current_date,      0, 0, 0, cdateFunc     ),
